plugins {
    id 'java'
    id("com.github.spacialcircumstances.gradle-cucumber-reporting") version "0.1.25"
    id 'jacoco'
    id("org.sonarqube") version "4.4.0.3356"
    id 'maven-publish'
    id "com.github.jk1.dependency-license-report" version "1.16"
    id("de.zebrajaeger.sendMail") version "0.2.2"
}

/*token
* ID : myRandomID_34892
* 37064854aaa --> Github
* https://0962-154-121-26-74.ngrok-free.app
* Rayane 12345 -> Jenkins
*
* */

group = 'com.example'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'
}

cucumberReports {
    outputDir = file('build/reports/cucumber')
    buildId = '0'
    reports = files("reports/example-report.json")
}

test {
    finalizedBy('jacocoTestReport')
    finalizedBy('sonarqube')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacocoHtml')
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "com.example:my-project"
        property "sonar.projectName", "Building Tools Project"
        property "sonar.host.url", "http://localhost:9000"
    }
}

javadoc {
    destinationDir = file('build/docs/javadoc')
    options.encoding = 'UTF-8'
}


 publishing {
    repositories {
        maven {
            url 'https://mymavenrepo.com/repo/g6kXODnVmelbynqrHl86/'
            credentials {
                username 'myMavenRepo'
                password "1234"
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}


task sendSlackNotification {
    doLast {
        def payload = '''
        {
            "text": ":rocket: *Deployment completed successfully!* :tada:",
            "attachments": [
                {
                    "color": "#36a64f",
                    "title": "Build Details",
                    "text": "Your Jar File Has Been Deployed Succesfully",
                    "footer": "Deployment Notification",
                    "footer_icon": "https://platform.slack-edge.com/img/default_application_icon.png",
                    "ts": ''' + (System.currentTimeMillis() / 1000) + '''
                }
            ]
        }
        '''
        def slackWebhookUrl = "https://hooks.slack.com/services/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"
        def url = new URL(slackWebhookUrl)
        def connection = url.openConnection()
        connection.setRequestMethod("POST")
        connection.setDoOutput(true)
        connection.setRequestProperty("Content-Type", "application/json")
        connection.getOutputStream().write(payload.getBytes("UTF-8"))
        def responseCode = connection.getResponseCode()

    }
}

sendMail {
    smtpServer {
        host "smtp.gmail.com"
        port 587
        user "kr_kehil@esi.dz"
        password "hhws jjoi bgqk xvaf"
    }
    mail {
        from "kr_kehil@esi.dz"
        to "kr_kehil@esi.dz"
        body "The API has been deployed with success !"
    }
}


publishMavenJavaPublicationToMavenRepository.finalizedBy(sendSlackNotification)
publishMavenJavaPublicationToMavenRepository.finalizedBy('sendMail')




